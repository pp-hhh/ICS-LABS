                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f41807000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f69804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f79002000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # 520120910022 徐一宸
                            | # Describe how and why you modified the baseline code.
                            | # 1 Loop unrolling for six time.
                            | # 2 Using %r10, %r11 to avoid data dependency in loop.
                            | # 3 If the number of value in src is less than six, than go to the 
                            | # nop part, which also using loop unrolling to decrease the cost 
                            | # of conditional jmp misprediction.
                            | # 4 
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 704501000000000000   | 	jmp Loop
                            | 
0x03b:                      | Loop1:
0x03b: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x045: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11
0x04f: 50171000000000000000 | 	mrmovq 16(%rdi), %rcx
0x059: 50371800000000000000 | 	mrmovq 24(%rdi), %rbx
0x063: 50972000000000000000 | 	mrmovq 32(%rdi), %r9
0x06d: 50872800000000000000 | 	mrmovq 40(%rdi), %r8
                            | 
0x077: 62aa                 | 	andq %r10, %r10
0x079: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x083: 719600000000000000   | 	jle Loop2
0x08c: c0f00100000000000000 | 	iaddq $1, %rax
0x096:                      | Loop2:
0x096: 62bb                 | 	andq %r11, %r11
0x098: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x0a2: 71b500000000000000   | 	jle Loop3
0x0ab: c0f00100000000000000 | 	iaddq $1, %rax
0x0b5:                      | Loop3:
0x0b5: 6211                 | 	andq %rcx, %rcx
0x0b7: 40161000000000000000 | 	rmmovq %rcx, 16(%rsi)
0x0c1: 71d400000000000000   | 	jle Loop4
0x0ca: c0f00100000000000000 | 	iaddq $1, %rax
0x0d4:                      | Loop4:
0x0d4: 6233                 | 	andq %rbx, %rbx
0x0d6: 40361800000000000000 | 	rmmovq %rbx, 24(%rsi)
0x0e0: 71f300000000000000   | 	jle Loop5
0x0e9: c0f00100000000000000 | 	iaddq $1, %rax
0x0f3:                      | Loop5:
0x0f3: 6299                 | 	andq %r9, %r9
0x0f5: 40962000000000000000 | 	rmmovq %r9, 32(%rsi)
0x0ff: 711201000000000000   | 	jle Loop6
0x108: c0f00100000000000000 | 	iaddq $1, %rax
0x112:                      | Loop6:
0x112: 6288                 | 	andq %r8, %r8
0x114: 40862800000000000000 | 	rmmovq %r8, 40(%rsi)
0x11e: 713101000000000000   | 	jle Loop7
0x127: c0f00100000000000000 | 	iaddq $1, %rax
0x131:                      | Loop7:
0x131: c0f73000000000000000 | 	iaddq $48, %rdi
0x13b: c0f63000000000000000 | 	iaddq $48, %rsi
0x145:                      | Loop:
0x145: c0f2faffffffffffffff | 	iaddq $-6, %rdx       # len - 6 >= 0 ?
0x14f: 753b00000000000000   | 	jge Loop1
                            | 
                            | # len <= 6
0x158: c0f20600000000000000 | 	iaddq $6, %rdx
0x162: 766c01000000000000   | 	jg Nop
0x16b: 90                   | 	ret
0x16c:                      | Nop:
0x16c: 50a70000000000000000 | 	mrmovq (%rdi), %r10   # get val1
0x176: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11  # get val2
0x180: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x18a: 62aa                 | 	andq %r10, %r10
0x18c: 719f01000000000000   | 	jle Nop1
0x195: c0f00100000000000000 | 	iaddq $1, %rax
0x19f:                      | Nop1:
0x19f: c0f2ffffffffffffffff | 	iaddq $-1, %rdx       # len--
0x1a9: 74b301000000000000   | 	jne Nop2
0x1b2: 90                   | 	ret
0x1b3:                      | Nop2:
0x1b3: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10 # get val3
0x1bd: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x1c7: 62bb                 | 	andq %r11, %r11
0x1c9: 71dc01000000000000   | 	jle Nop22
0x1d2: c0f00100000000000000 | 	iaddq $1, %rax
0x1dc:                      | Nop22:
0x1dc: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x1e6: 74f001000000000000   | 	jne Nop3
0x1ef: 90                   | 	ret
0x1f0:                      | Nop3:
0x1f0: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11 # get val4
0x1fa: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x204: 62aa                 | 	andq %r10, %r10
0x206: 711902000000000000   | 	jle Nop33
0x20f: c0f00100000000000000 | 	iaddq $1, %rax
0x219:                      | Nop33:
0x219: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x223: 742d02000000000000   | 	jne Nop4
0x22c: 90                   | 	ret
0x22d:                      | Nop4:
0x22d: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10 # get val5
0x237: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x241: 62bb                 | 	andq %r11, %r11
0x243: 715602000000000000   | 	jle Nop44
0x24c: c0f00100000000000000 | 	iaddq $1, %rax
0x256:                      | Nop44:
0x256: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x260: 746a02000000000000   | 	jne Nop5
0x269: 90                   | 	ret
0x26a:                      | Nop5:
0x26a: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x274: 62aa                 | 	andq %r10, %r10
0x276: 718902000000000000   | 	jle Done
0x27f: c0f00100000000000000 | 	iaddq $1, %rax
                            | 	
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x289:                      | Done:
0x289: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x28a:                      | End:
                            | #/* $end ncopy-ys */
0x28a:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x290:                      | 	.align 8
0x290:                      | src:
0x290: ffffffffffffffff     | 	.quad -1
0x298: feffffffffffffff     | 	.quad -2
0x2a0: fdffffffffffffff     | 	.quad -3
0x2a8: fcffffffffffffff     | 	.quad -4
0x2b0: 0500000000000000     | 	.quad 5
0x2b8: faffffffffffffff     | 	.quad -6
0x2c0: f9ffffffffffffff     | 	.quad -7
0x2c8: 0800000000000000     | 	.quad 8
0x2d0: 0900000000000000     | 	.quad 9
0x2d8: f6ffffffffffffff     | 	.quad -10
0x2e0: f5ffffffffffffff     | 	.quad -11
0x2e8: f4ffffffffffffff     | 	.quad -12
0x2f0: 0d00000000000000     | 	.quad 13
0x2f8: f2ffffffffffffff     | 	.quad -14
0x300: 0f00000000000000     | 	.quad 15
0x308: f0ffffffffffffff     | 	.quad -16
0x310: 1100000000000000     | 	.quad 17
0x318: 1200000000000000     | 	.quad 18
0x320: 1300000000000000     | 	.quad 19
0x328: 1400000000000000     | 	.quad 20
0x330: ebffffffffffffff     | 	.quad -21
0x338: eaffffffffffffff     | 	.quad -22
0x340: e9ffffffffffffff     | 	.quad -23
0x348: e8ffffffffffffff     | 	.quad -24
0x350: e7ffffffffffffff     | 	.quad -25
0x358: e6ffffffffffffff     | 	.quad -26
0x360: 1b00000000000000     | 	.quad 27
0x368: e4ffffffffffffff     | 	.quad -28
0x370: 1d00000000000000     | 	.quad 29
0x378: 1e00000000000000     | 	.quad 30
0x380: e1ffffffffffffff     | 	.quad -31
0x388: e0ffffffffffffff     | 	.quad -32
0x390: dfffffffffffffff     | 	.quad -33
0x398: deffffffffffffff     | 	.quad -34
0x3a0: 2300000000000000     | 	.quad 35
0x3a8: dcffffffffffffff     | 	.quad -36
0x3b0: 2500000000000000     | 	.quad 37
0x3b8: 2600000000000000     | 	.quad 38
0x3c0: 2700000000000000     | 	.quad 39
0x3c8: d8ffffffffffffff     | 	.quad -40
0x3d0: d7ffffffffffffff     | 	.quad -41
0x3d8: d6ffffffffffffff     | 	.quad -42
0x3e0: d5ffffffffffffff     | 	.quad -43
0x3e8: d4ffffffffffffff     | 	.quad -44
0x3f0: 2d00000000000000     | 	.quad 45
0x3f8: 2e00000000000000     | 	.quad 46
0x400: 2f00000000000000     | 	.quad 47
0x408: 3000000000000000     | 	.quad 48
0x410: cfffffffffffffff     | 	.quad -49
0x418: 3200000000000000     | 	.quad 50
0x420: 3300000000000000     | 	.quad 51
0x428: 3400000000000000     | 	.quad 52
0x430: 3500000000000000     | 	.quad 53
0x438: 3600000000000000     | 	.quad 54
0x440: c9ffffffffffffff     | 	.quad -55
0x448: c8ffffffffffffff     | 	.quad -56
0x450: c7ffffffffffffff     | 	.quad -57
0x458: 3a00000000000000     | 	.quad 58
0x460: 3b00000000000000     | 	.quad 59
0x468: 3c00000000000000     | 	.quad 60
0x470: 3d00000000000000     | 	.quad 61
0x478: 3e00000000000000     | 	.quad 62
0x480: 3f00000000000000     | 	.quad 63
0x488: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x490:                      | 	.align 16
0x490:                      | Predest:
0x490: fadebc0000000000     | 	.quad 0xbcdefa
0x498:                      | dest:
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690:                      | Postdest:
0x690: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x698:                      | .align 8
                            | # Run time stack
0x698: 0000000000000000     | 	.quad 0
0x6a0: 0000000000000000     | 	.quad 0
0x6a8: 0000000000000000     | 	.quad 0
0x6b0: 0000000000000000     | 	.quad 0
0x6b8: 0000000000000000     | 	.quad 0
0x6c0: 0000000000000000     | 	.quad 0
0x6c8: 0000000000000000     | 	.quad 0
0x6d0: 0000000000000000     | 	.quad 0
0x6d8: 0000000000000000     | 	.quad 0
0x6e0: 0000000000000000     | 	.quad 0
0x6e8: 0000000000000000     | 	.quad 0
0x6f0: 0000000000000000     | 	.quad 0
0x6f8: 0000000000000000     | 	.quad 0
0x700: 0000000000000000     | 	.quad 0
0x708: 0000000000000000     | 	.quad 0
0x710: 0000000000000000     | 	.quad 0
                            | 
0x718:                      | Stack:
