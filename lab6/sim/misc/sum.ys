#
#Execution begins at address 0
    .pos 0
init:   
    irmovq Stack, %rsp
    jmp Main

# Sample linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

Main:
	irmovq ele1, %rdi	
	call sum_list		# sum_list(ele1)
	halt


# long sum_list(list_ptr ls)
sum_list:
    irmovq $0, %rax     # val = 0
    andq %rdi, %rdi
    je End
Loop:
    mrmovq (%rdi), %r10   # x = ls->val
    addq %r10, %rax       # Add to val
    mrmovq 8(%rdi), %rdi  # ls = ls->next
    andq %rdi, %rdi
    jne Loop
End:
    ret

    .pos 0x100
Stack:
